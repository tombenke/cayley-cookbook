<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cayley CookBook on Cayley-CookBook</title>
    <link>https://tombenke.github.io/cayley-cookbook/en/</link>
    <description>Recent content in Cayley CookBook on Cayley-CookBook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Sep 2020 14:04:49 +0200</lastBuildDate>
    
	<atom:link href="https://tombenke.github.io/cayley-cookbook/en/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/about/</link>
      <pubDate>Tue, 01 Sep 2020 14:04:49 +0200</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/about/</guid>
      <description>About #  TODO</description>
    </item>
    
    <item>
      <title>Find All Vertices</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/queries/find_all_vertices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/queries/find_all_vertices/</guid>
      <description>Find All Vertices #  Problem #  How can I list all the nodes (subjects, predicates and objects) of the graph?
Test Data #    Fig 1.: Graph diagram of test data   Show the test data in nquads format &amp;lt;alice&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;bob&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;fred&amp;gt; . &amp;lt;bob&amp;gt; &amp;lt;status&amp;gt; &amp;#34;cool_person&amp;#34; . &amp;lt;dani&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;charlie&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;charlie&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;dani&amp;gt; . &amp;lt;dani&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;greg&amp;gt; .</description>
    </item>
    
    <item>
      <title>Graph Based Data Model</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/basic-concepts/graph-based-data-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/basic-concepts/graph-based-data-model/</guid>
      <description>Graph Based Data Model #  Conceptual Model, or Domain
A conceptual model is a model of a subject area or area of knowledge, sometimes called a domain.
It represents:
 the primary entities (the things of the domain), the relationships among entities, the attributes and attribute values (sometimes called properties and property values) of the entities and the relationships, and sometimes rules that associate entities, relationships, and attributes (or all three) in more complicated ways.</description>
    </item>
    
    <item>
      <title>Namespaces and Vocabularies</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/vocabularies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/vocabularies/</guid>
      <description>Namespaces and Vocabularies #  Namespaces #  The following code fragment lists all the namespaces currently registered:
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/cayleygraph/quad/voc&amp;#34; // Add some predefined vocabularies 	_ &amp;#34;github.com/cayleygraph/quad/voc/schema&amp;#34; _ &amp;#34;github.com/cayleygraph/quad/voc/xsd&amp;#34; _ &amp;#34;github.com/cayleygraph/quad/voc/rdf&amp;#34; _ &amp;#34;github.com/cayleygraph/quad/voc/rdfs&amp;#34; ) func main() { fmt.Println(&amp;#34;Registered namespaces:&amp;#34;); for _, v := range voc.List() { fmt.Printf(&amp;#34; %s =&amp;gt; %s\n&amp;#34;, v.Prefix, v.Full); } } 
cd namespaces go run list_namespaces.go` The results:
Registered namespaces: xsd: =&amp;gt; http://www.</description>
    </item>
    
    <item>
      <title>Find All Predicates</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/queries/find_all_predicates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/queries/find_all_predicates/</guid>
      <description>Find All Predicates #  Problem #  How can I list all the predicates used in the graph?
Test Data #    Fig 1.: Graph diagram of test data   Show the test data in nquads format &amp;lt;alice&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;bob&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;fred&amp;gt; . &amp;lt;bob&amp;gt; &amp;lt;status&amp;gt; &amp;#34;cool_person&amp;#34; . &amp;lt;dani&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;charlie&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;charlie&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;dani&amp;gt; . &amp;lt;dani&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;greg&amp;gt; . &amp;lt;dani&amp;gt; &amp;lt;status&amp;gt; &amp;#34;cool_person&amp;#34; .</description>
    </item>
    
    <item>
      <title>Quads</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/quads/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/quads/</guid>
      <description>Quads #  This code creates a set of quads, then exports them into several formats:
See the full list of source code package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/cayleygraph/quad&amp;#34; &amp;#34;reflect&amp;#34; // Add some predefined vocabularies 	&amp;#34;github.com/cayleygraph/quad/voc/rdf&amp;#34; &amp;#34;github.com/tombenke/cayley-cookbook-src/kbase/voc/foaf&amp;#34; ) func main() { // Create Quads about some people using Blank Nodes as references 	quadsWithBNodes := makeQuadsWithBNodes() // Take a look at the resulted quads 	printQuads(quadsWithBNodes) // Create Quads about some people using IRIs as references 	quadsWithIRIs := makeQuadsWithIRIs() // Take a look at the resulted quads 	printQuads(quadsWithIRIs) } func makeQuadsWithBNodes() []quad.</description>
    </item>
    
    <item>
      <title>Resources</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/basic-concepts/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/basic-concepts/resources/</guid>
      <description>Resources #  </description>
    </item>
    
    <item>
      <title>Bi-directional Relations</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/queries/bidirectional/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/queries/bidirectional/</guid>
      <description>Bi-directional Relations #  Problem #  If I have a graph: A &amp;lt;-1-&amp;gt; B &amp;lt;-2-&amp;gt; C where A, B, C are subjects and objects linked with predicates 1, 2 (bidirectional). How can I get C using a path?
Test data #    Fig 1.: Graph diagram of test data   Show the test data in nquads format &amp;lt;A&amp;gt; &amp;lt;predicate-1&amp;gt; &amp;lt;B&amp;gt; . &amp;lt;B&amp;gt; &amp;lt;predicate-1&amp;gt; &amp;lt;A&amp;gt; . &amp;lt;B&amp;gt; &amp;lt;predicate-2&amp;gt; &amp;lt;C&amp;gt; .</description>
    </item>
    
    <item>
      <title>Statements</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/basic-concepts/statements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/basic-concepts/statements/</guid>
      <description>Statements #  Statements or assertions
 Related pages: </description>
    </item>
    
    <item>
      <title>Stores</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/stores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/stores/</guid>
      <description>Stores #  Test data #  package main import ( &amp;#34;github.com/cayleygraph/quad&amp;#34; // Add some predefined vocabularies 	&amp;#34;github.com/cayleygraph/quad/voc/rdf&amp;#34; &amp;#34;github.com/tombenke/cayley-cookbook-src/kbase/voc/foaf&amp;#34; ) func makeQuads() []quad.Quad { // Generate Blank Nodes to represent the people internally 	luke := quad.RandomBlankNode() leia := quad.IRI(&amp;#34;starwars:leia_organa&amp;#34;) //quad.RandomBlankNode()  // Create Quads about to export 	label := &amp;#34;people&amp;#34; quads := []quad.Quad{} quads = append(quads, quad.Make(luke, quad.IRI(rdf.Type), quad.IRI(foaf.Person), label)) quads = append(quads, quad.Make(luke, quad.IRI(foaf.GivenName), &amp;#34;Luke&amp;#34;, label)) quads = append(quads, quad.</description>
    </item>
    
    <item>
      <title>CRUD Operations</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/crud-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/crud-operations/</guid>
      <description>CRUD Operations #  </description>
    </item>
    
    <item>
      <title>Vocabularies</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/basic-concepts/vocabularies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/basic-concepts/vocabularies/</guid>
      <description>Vocabularies #   Related pages:   Namespaces and Vocabularies   </description>
    </item>
    
    <item>
      <title>Rdf Graphs</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/basic-concepts/rdf-graphs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/basic-concepts/rdf-graphs/</guid>
      <description>Rdf Graphs #  </description>
    </item>
    
    <item>
      <title>Transactions</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/transactions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/transactions/</guid>
      <description>Transactions #   Related pages: </description>
    </item>
    
    <item>
      <title>Bookmarks</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/queries/bookmarks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/queries/bookmarks/</guid>
      <description>Bookmarks #  Run the program: 
cd schema go run find_bookmarks_by_tags.go yamlImpex.go store.go bookmarks.go The output of the program:
Show the results Results of finding any of `nosql` or `gremlin` tags: - &amp;#34;Ontotext GraphDB&amp;#34; [graphdb nosql knowledge-graph linked-data semantic-web rdf] https://ontotext.com/products/graphdb/ - &amp;#34;Gremlin&amp;#39;s Graph Traversal Machinery&amp;#34; [gremlin cayley tinkerprop gizmo presentation graph-db query-language] https://www.slideshare.net/slidarko/gremlins-graph-traversal-machinery Results of finding every tags of `cayley` or `gremlin`: - &amp;#34;Gremlin&amp;#39;s Graph Traversal Machinery&amp;#34; [gremlin cayley tinkerprop gizmo presentation graph-db query-language] https://www.</description>
    </item>
    
    <item>
      <title>Schemas</title>
      <link>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/en/docs/cayley-as-package/schemas/</guid>
      <description>Schemas #  </description>
    </item>
    
  </channel>
</rss>