<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cayley CookBook on Cayley-CookBook</title>
    <link>https://tombenke.github.io/cayley-cookbook/</link>
    <description>Recent content in Cayley CookBook on Cayley-CookBook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Sep 2020 14:04:49 +0200</lastBuildDate>
    
	<atom:link href="https://tombenke.github.io/cayley-cookbook/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bevezetés</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/about/</link>
      <pubDate>Tue, 01 Sep 2020 14:04:49 +0200</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/about/</guid>
      <description>Bevezetés #  Amikor manapság Mesterséges Intelligenciáról beszélünk, többnyire a Gépi Tanulásra gondolunk, amit Statisztikus Tanulásnak is neveznek. A Gépi Tanulás módszereivel nagyon látványos eredményeket lehet elérni, ugyanakkor komoly hátránya, hogy a tanulás során keletkezett eredmények elemzése, magyarázata ember számára szinte egyáltalán nem, vagy csak nehezen értelmezhető.
A Gépi Tanulás azonban csak az egyik lehetséges megközelítés. Korábban, az MI kutatások kezdetén, az 50-es 60-as években a fő csapásirány a szimbolikus megközelítés volt.</description>
    </item>
    
    <item>
      <title>Gráf alapú adatmodellezés</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/basic-concepts/graph-based-data-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/basic-concepts/graph-based-data-model/</guid>
      <description>Gráf alapú adatmodellezés #  Amikor tudásgráfot építünk, akkor a világ egy részéről építünk fel egy koncepcionális modellt.
Egy koncepcionális modell jellemzően egy meghatározott szakterületet fed le, ezért ezt a modellt domain-nek, tudás-tartománynak is nevezzük.
Egy domain a következőket képviseli:
 az elsődleges entitásokat (a dolgokat, amelyek a domain-be beletartoznak). Az entitásokra használni fogjuk a resource kifejezést is; az entitások között fennálló kapcsolatokat; az entitások és kapcsolatok tulajdonságait, más szóval attribútumait Ezeket property-knek is nevezzük esetleg a szabályokat, amelyek az entitások és attribútumaik kapcsolatára, azok belső tulajdonságaira vonatkoznak.</description>
    </item>
    
    <item>
      <title>Namespace-ek és szótárak</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/vocabularies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/vocabularies/</guid>
      <description>Namespace-ek és szótárak #  Namespace-ek #  Az alábbi kód kilistázza az összes, jelenleg regisztrált namespace-t:
package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/cayleygraph/quad/voc&amp;#34; // Add some predefined vocabularies 	_ &amp;#34;github.com/cayleygraph/quad/voc/schema&amp;#34; _ &amp;#34;github.com/cayleygraph/quad/voc/xsd&amp;#34; _ &amp;#34;github.com/cayleygraph/quad/voc/rdf&amp;#34; _ &amp;#34;github.com/cayleygraph/quad/voc/rdfs&amp;#34; ) func main() { fmt.Println(&amp;#34;Registered namespaces:&amp;#34;); for _, v := range voc.List() { fmt.Printf(&amp;#34; %s =&amp;gt; %s\n&amp;#34;, v.Prefix, v.Full); } } 
cd namespaces go run list_namespaces.go` a program kimenete:
Registered namespaces: xsd: =&amp;gt; http://www.</description>
    </item>
    
    <item>
      <title>Összes node kiírása</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/queries/find_all_vertices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/queries/find_all_vertices/</guid>
      <description>Összes node kiírása #  Probléma #  Hogyan tudom gráf összes elemét (subject-eket, object-eket, predicate-eket) kiíratni?
Teszt adatok #    1. ábra: Teszt adatok Gráf diagramja   Kiinduló adatok megtekintése nquads formában &amp;lt;alice&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;bob&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;fred&amp;gt; . &amp;lt;bob&amp;gt; &amp;lt;status&amp;gt; &amp;#34;cool_person&amp;#34; . &amp;lt;dani&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;charlie&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;charlie&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;dani&amp;gt; . &amp;lt;dani&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;greg&amp;gt; . &amp;lt;dani&amp;gt; &amp;lt;status&amp;gt; &amp;#34;cool_person&amp;#34; . &amp;lt;emily&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;fred&amp;gt; .</description>
    </item>
    
    <item>
      <title>Erőforrások</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/basic-concepts/resources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/basic-concepts/resources/</guid>
      <description>Erőforrások #  Erőforrás #  Az erőforrás egy általános fogalom, amelyet a web-en, és a szemantikus web-en gyakran használunk. Lényegében a világban létező konkrét és absztrakt dolgokat értjük alatta. A resource-nak van két fontos tulajdonsága:
 van egyedi azonossága, identitása (identity), ábrázolható valamilyen módon (representation).  Tekintetbe véve a fenti két jellemzőt, a resource megfeleltethető a Domain Driven Design entity (entitás) és aggregate fogalmainak. A mi vizsgálatunk szempontjából a két dolgot azonosnak tekinthetjük, a lényeg, hogy egy adott dolgot egyértelműen tudjunk azonosítani, akár globálisan, akár egy szűkebb értelmezési tartományban, vagyis rendelkezzen legalább egy egyedi azonosítóval, valamint le tudjuk írni valamilyen formában.</description>
    </item>
    
    <item>
      <title>Quad-ok</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/quads/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/quads/</guid>
      <description>Quad-ok #  Az alábbi példa létrehoz egy quad halmazt, majd kiexportálja többféle formátumban:
A teljes kódlista megtekintése package main import ( &amp;#34;fmt&amp;#34; &amp;#34;github.com/cayleygraph/quad&amp;#34; &amp;#34;reflect&amp;#34; // Add some predefined vocabularies 	&amp;#34;github.com/cayleygraph/quad/voc/rdf&amp;#34; &amp;#34;github.com/tombenke/cayley-cookbook-src/kbase/voc/foaf&amp;#34; ) func main() { // Create Quads about some people using Blank Nodes as references 	quadsWithBNodes := makeQuadsWithBNodes() // Take a look at the resulted quads 	printQuads(quadsWithBNodes) // Create Quads about some people using IRIs as references 	quadsWithIRIs := makeQuadsWithIRIs() // Take a look at the resulted quads 	printQuads(quadsWithIRIs) } func makeQuadsWithBNodes() []quad.</description>
    </item>
    
    <item>
      <title>Összes predikátum kiírása</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/queries/find_all_predicates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/queries/find_all_predicates/</guid>
      <description>Összes predikátum kiírása #  Probléma #  Hogyan tudom kilistázni az összes predikátumot, ami szerepel a gráfban?
Teszt adatok #    1. ábra: Teszt adatok Gráf diagramja   Kiinduló adatok megtekintése nquads formában &amp;lt;alice&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;bob&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;fred&amp;gt; . &amp;lt;bob&amp;gt; &amp;lt;status&amp;gt; &amp;#34;cool_person&amp;#34; . &amp;lt;dani&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;charlie&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;bob&amp;gt; . &amp;lt;charlie&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;dani&amp;gt; . &amp;lt;dani&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;greg&amp;gt; . &amp;lt;dani&amp;gt; &amp;lt;status&amp;gt; &amp;#34;cool_person&amp;#34; . &amp;lt;emily&amp;gt; &amp;lt;follows&amp;gt; &amp;lt;fred&amp;gt; .</description>
    </item>
    
    <item>
      <title>Kétirányú relációk</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/queries/bidirectional/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/queries/bidirectional/</guid>
      <description>Kétirányú relációk #  Probléma #  Ha van egy A &amp;lt;-1-&amp;gt; B &amp;lt;-2-&amp;gt; C gráfunk ahol A, B, C subject-ek, és object-ek az 1, 2 predikátumokkal vannak összekapcsolva mindkét irányban (bidirectional), akkor hogyan tudjuk C-t elérni A-ból egy path segítségével?
Teszt adatok #    Fig 1.: A tesz adat gráfja   A teszt adatok megjelenítése in nquads formátumban &amp;lt;A&amp;gt; &amp;lt;predicate-1&amp;gt; &amp;lt;B&amp;gt; . &amp;lt;B&amp;gt; &amp;lt;predicate-1&amp;gt; &amp;lt;A&amp;gt; . &amp;lt;B&amp;gt; &amp;lt;predicate-2&amp;gt; &amp;lt;C&amp;gt; .</description>
    </item>
    
    <item>
      <title>Store-ok</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/stores/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/stores/</guid>
      <description>Store-ok #  Teszt adatok előállítása #  package main import ( &amp;#34;github.com/cayleygraph/quad&amp;#34; // Add some predefined vocabularies 	&amp;#34;github.com/cayleygraph/quad/voc/rdf&amp;#34; &amp;#34;github.com/tombenke/cayley-cookbook-src/kbase/voc/foaf&amp;#34; ) func makeQuads() []quad.Quad { // Generate Blank Nodes to represent the people internally 	luke := quad.RandomBlankNode() leia := quad.IRI(&amp;#34;starwars:leia_organa&amp;#34;) //quad.RandomBlankNode()  // Create Quads about to export 	label := &amp;#34;people&amp;#34; quads := []quad.Quad{} quads = append(quads, quad.Make(luke, quad.IRI(rdf.Type), quad.IRI(foaf.Person), label)) quads = append(quads, quad.Make(luke, quad.IRI(foaf.GivenName), &amp;#34;Luke&amp;#34;, label)) quads = append(quads, quad.</description>
    </item>
    
    <item>
      <title>Állítások</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/basic-concepts/statements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/basic-concepts/statements/</guid>
      <description>Állítások #  Alany, Állítmány, Tárgy #  A tudást tény-állításokként rögzítjük. A tényeket kijelentő mondatokként megfogalmazott állítások formájában írtuk le. Például:
Luke Skywalker életkora kora 23 év. angolul:
Luke Skywalker has age 23. A mondatokat át lehet alakítani olyan formába, hogy azok az alany-állítmány-tárgy szerkezetet tükrözzék. Ezeket a szerkezeti elemeket angolul subject-predicate-object névvel azonosítjuk.
Luke-Skywalker has-age 23. A mondat elemei:
 subject (alany): Luke-Skywalker, predicate (állítmány): has-age, object (tárgy): 23.</description>
    </item>
    
    <item>
      <title>Szótárak</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/basic-concepts/vocabularies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/basic-concepts/vocabularies/</guid>
      <description>Szótárak #  Szótár #  A tudásgráfok alkalmazásának egyik fő előnye, hogy a segítségükkel leírt tudás-területek ismeretanyagát a szimbolikus térben tárgyalja, vagyis olyan kódolási, és reprezentációs formákat alkalmaz, ami az emberek számára is érthetővé teszi a fogalmak, dolgok egyértelmű azonosítását.
Amikor egy entitást megnevezünk, vagy állításokat teszünk, predikátumok alkalmazásával, a gépnek és az embernek ugyanazt a jelentéstartalmat kell értenie a kifejezések mögött. Ahhoz, hogy a kifejezések jelentése is egyértelmű legyen, szótárakat hozunk létre.</description>
    </item>
    
    <item>
      <title>CRUD Műveletek</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/crud-operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/crud-operations/</guid>
      <description>CRUD Műveletek #  </description>
    </item>
    
    <item>
      <title>Tudás Gráf reprezentációk</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/basic-concepts/rdf-graphs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/basic-concepts/rdf-graphs/</guid>
      <description>Tudás Gráf reprezentációk #  Az előző fejezetekben bemutattuk, hogyan lehet tényállításokat kifejezni resource-ok, predikátumok, és literál értékek alkalmazásával. Ezeket a tényállítás hármasokat tripleteknek is nevezzük.
Bevezettük az IRI fogalmát, ami alkalmas arra, hogy a tényállításokat formalizáltan, általános érvénnyel írjuk le. Rendelkezésünkre áll tehát egy egyszerű módszer arra, hogy a tudásgráf csomópontjait és éleit, valamint azok címkéit szövegszerkesztővel szerkeszthető, egyszerű text formátumba alakítsuk, file-okban tároljuk, és ezen file-ok tartalmát betöltsük a tudásgráfot megvalósító adatbázisba, a számítógép memóriájába, továbbá, hogy onnan kinyerjük, és visszatároljuk file-ba.</description>
    </item>
    
    <item>
      <title>Könyvjelzők</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/queries/bookmarks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/queries/bookmarks/</guid>
      <description>Könyvjelzők #  Futtassuk a programot: 
cd schema go run find_bookmarks_by_tags.go yamlImpex.go store.go bookmarks.go A program kimenete:
Az eredmények megjelenítése Results of finding any of `nosql` or `gremlin` tags: - &amp;#34;Ontotext GraphDB&amp;#34; [graphdb nosql knowledge-graph linked-data semantic-web rdf] https://ontotext.com/products/graphdb/ - &amp;#34;Gremlin&amp;#39;s Graph Traversal Machinery&amp;#34; [gremlin cayley tinkerprop gizmo presentation graph-db query-language] https://www.slideshare.net/slidarko/gremlins-graph-traversal-machinery Results of finding every tags of `cayley` or `gremlin`: - &amp;#34;Gremlin&amp;#39;s Graph Traversal Machinery&amp;#34; [gremlin cayley tinkerprop gizmo presentation graph-db query-language] https://www.</description>
    </item>
    
    <item>
      <title>Tranzakciók</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/transactions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/transactions/</guid>
      <description>Tranzakciók #   Kapcsolódó oldalak: </description>
    </item>
    
    <item>
      <title>Sémák</title>
      <link>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/schemas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tombenke.github.io/cayley-cookbook/docs/cayley-as-package/schemas/</guid>
      <description>Sémák #  Ez a fejezet arra mutat példát, hogyan lehet egyszerű vagy összetett objektumokat, azok tulajdonságait quad-okká alakítani, és feltölteni a store-ba, az adatstruktúra deklarációjában elhelyezett annotációk segítségével. Továbbá hogyan lehet a store-ból, az eredmény listákból egyszerűen összeszedni az objektumok property-jeit, és objektumként visszakapni az eredményeket.
Ezzel a módszerrel jelentősen egyszerűbb az összetett adatoszerkezetek store-ba való feltöltése és lekérdezése, nem kell saját implementációt készíteni arra például, hogy egy adott Blank Node-dal, vagy IRI-vel azonosított objektum minden egyes tulajdonság-értékét egyenként szedegessük össze.</description>
    </item>
    
  </channel>
</rss>