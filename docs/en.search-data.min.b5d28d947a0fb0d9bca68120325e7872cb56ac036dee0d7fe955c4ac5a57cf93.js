'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','section'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/cayley-cookbook/docs/about/','title':"About",'section':"Docs",'content':"About #  TODO\n"});index.add({'id':1,'href':'/cayley-cookbook/docs/basic-concepts/','title':"Basic Concepts",'section':"Docs",'content':"Basic Concepts #  This Chapter introduces some fundamental concepts required to work with Knowledge Graphs and especially with Cayley.\n"});index.add({'id':2,'href':'/cayley-cookbook/docs/basic-concepts/graph-based-data-model/','title':"Graph Based Data Model",'section':"Basic Concepts",'content':"Graph Based Data Model #  "});index.add({'id':3,'href':'/cayley-cookbook/docs/cayley-as-package/vocabularies/','title':"Vocabularies",'section':"Cayley as Package",'content':"Vocabularies #  "});index.add({'id':4,'href':'/cayley-cookbook/docs/cayley-overview/','title':"Cayley Overview",'section':"Docs",'content':"Cayley Overview #    Cayley Components   "});index.add({'id':5,'href':'/cayley-cookbook/docs/cayley-as-package/quads/','title':"Quads",'section':"Cayley as Package",'content':"Quads #  package main import ( \u0026#34;fmt\u0026#34; \u0026#34;reflect\u0026#34; \u0026#34;github.com/cayleygraph/quad\u0026#34; // Add some predefined vocabularies \t\u0026#34;github.com/cayleygraph/quad/voc/rdf\u0026#34; \u0026#34;github.com/tombenke/cayley-cookbook/voc/foaf\u0026#34; ) func main() { // Create Quads about some people using Blank Nodes as references  quadsWithBNodes := makeQuadsWithBNodes() // Take a look at the resulted quads  printQuads(quadsWithBNodes) // Create Quads about some people using IRIs as references  quadsWithIRIs := makeQuadsWithIRIs() // Take a look at the resulted quads  printQuads(quadsWithIRIs) } func makeQuadsWithBNodes() []quad.Quad { label := \u0026#34;people\u0026#34; quads := []quad.Quad{} // Generate a Blank Node to represent the person internally  // You can create a sequence of internal IDs for the Blank Nodes  var seq quad.Sequence luke := seq.Next() // Alternatively create a Blank Node with a random internal ID  // luke := quad.RandomBlankNode()  quads = append(quads, quad.Make(luke, quad.IRI(rdf.Type), quad.IRI(foaf.Person), label)) quads = append(quads, quad.Make(luke, quad.IRI(foaf.FamilyName), \u0026#34;Luke\u0026#34;, label)) quads = append(quads, quad.Make(luke, quad.IRI(foaf.GivenName), \u0026#34;Skywalker\u0026#34;, label)) quads = append(quads, quad.Make(luke, quad.IRI(foaf.Age), 23, label)) leia := seq.Next() quads = append(quads, quad.Make(leia, quad.IRI(rdf.Type), quad.IRI(foaf.Person), label)) quads = append(quads, quad.Make(leia, quad.IRI(foaf.FamilyName), \u0026#34;Leia\u0026#34;, label)) quads = append(quads, quad.Make(leia, quad.IRI(foaf.GivenName), \u0026#34;Organa\u0026#34;, label)) quads = append(quads, quad.Make(leia, quad.IRI(foaf.Knows), luke, label)) return quads } func makeQuadsWithIRIs() []quad.Quad { label := \u0026#34;people\u0026#34; quads := []quad.Quad{} // Create IRIs to represent the person globally, and universally  luke := quad.IRI(\u0026#34;https://swapi.co/resource/human/luke_skywalker\u0026#34;) // Alternatively create a Blank Node with a random internal ID  // luke := quad.RandomBlankNode()  quads = append(quads, quad.Make(luke, quad.IRI(rdf.Type), quad.IRI(foaf.Person), label)) quads = append(quads, quad.Make(luke, quad.IRI(foaf.FamilyName), \u0026#34;Luke\u0026#34;, label)) quads = append(quads, quad.Make(luke, quad.IRI(foaf.GivenName), \u0026#34;Skywalker\u0026#34;, label)) leia := quad.IRI(\u0026#34;https://swapi.co/resource/human/leia_organa\u0026#34;) quads = append(quads, quad.Make(leia, quad.IRI(rdf.Type), quad.IRI(foaf.Person), label)) quads = append(quads, quad.Make(leia, quad.IRI(foaf.FamilyName), \u0026#34;Leia\u0026#34;, label)) quads = append(quads, quad.Make(leia, quad.IRI(foaf.GivenName), \u0026#34;Organa\u0026#34;, label)) quads = append(quads, quad.Make(leia, quad.IRI(foaf.Knows), luke, label)) return quads } func printQuads(quads []quad.Quad) { fmt.Println(\u0026#34;The details of the quads created:\u0026#34;) for i, q := range quads { fmt.Printf(\u0026#34;quads[%d]:\\n\u0026#34;, i) fmt.Printf(\u0026#34; subject: %s %v\\n\u0026#34;, q.Get(quad.Subject), reflect.TypeOf(q.Get(quad.Subject))) fmt.Printf(\u0026#34; predicate: %s %v\\n\u0026#34;, q.Get(quad.Predicate), reflect.TypeOf(q.Get(quad.Predicate))) fmt.Printf(\u0026#34; object: %s %v\\n\u0026#34;, q.Get(quad.Object), reflect.TypeOf(q.Get(quad.Object))) fmt.Printf(\u0026#34; label: %s %v\\n\\n\u0026#34;, q.Get(quad.Label), reflect.TypeOf(q.Get(quad.Label))) } fmt.Println(\u0026#34;The quads in NQuad representation:\u0026#34;) for _, q := range quads { fmt.Printf(\u0026#34;%s\\n\u0026#34;, q.NQuad()) } } "});index.add({'id':6,'href':'/cayley-cookbook/docs/basic-concepts/resources/','title':"Resources",'section':"Basic Concepts",'content':"Resources #  "});index.add({'id':7,'href':'/cayley-cookbook/docs/cayley-as-package/','title':"Cayley as Package",'section':"Docs",'content':"Cayley as Package #  This chapter demonstrates how can cayley be used as a Golang package.\n"});index.add({'id':8,'href':'/cayley-cookbook/docs/basic-concepts/statements/','title':"Statements",'section':"Basic Concepts",'content':"Statements #  "});index.add({'id':9,'href':'/cayley-cookbook/docs/cayley-as-package/stores/','title':"Stores",'section':"Cayley as Package",'content':"Stores #    Cayley Components   "});index.add({'id':10,'href':'/cayley-cookbook/docs/cayley-as-package/crud-operations/','title':"Crud Operations",'section':"Cayley as Package",'content':"Crud Operations #  "});index.add({'id':11,'href':'/cayley-cookbook/docs/basic-concepts/vocabularies/','title':"Vocabularies",'section':"Basic Concepts",'content':"Vocabularies #  "});index.add({'id':12,'href':'/cayley-cookbook/docs/basic-concepts/rdf-graphs/','title':"Rdf Graphs",'section':"Basic Concepts",'content':"Rdf Graphs #  "});index.add({'id':13,'href':'/cayley-cookbook/docs/cayley-as-package/transactions/','title':"Transactions",'section':"Cayley as Package",'content':"Transactions #  "});index.add({'id':14,'href':'/cayley-cookbook/docs/cayley-as-package/queries/','title':"Queries",'section':"Cayley as Package",'content':"Queries #  "});index.add({'id':15,'href':'/cayley-cookbook/docs/cayley-as-package/schemas/','title':"Schemas",'section':"Cayley as Package",'content':"Schemas #  "});})();